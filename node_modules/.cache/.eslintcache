[{"/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/index.js":"1","/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/App.js":"2","/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/reportWebVitals.js":"3","/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/utils/Data.js":"4","/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/components/PieChart.js":"5","/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/components/BarChart.js":"6","/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/components/DoughnutChart.js":"7"},{"size":535,"mtime":1683641019462,"results":"8","hashOfConfig":"9"},{"size":1947,"mtime":1683647633213,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1683641019463,"results":"11","hashOfConfig":"9"},{"size":478,"mtime":1683646441154,"results":"12","hashOfConfig":"9"},{"size":511,"mtime":1683645123452,"results":"13","hashOfConfig":"9"},{"size":541,"mtime":1683645783462,"results":"14","hashOfConfig":"9"},{"size":597,"mtime":1683647042547,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"18oko66",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/index.js",[],[],[],"/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/App.js",["41"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport { CategoryScale } from \"chart.js\";\nimport { useState, useRef } from \"react\";\nimport { Data } from \"./utils/Data\";\nimport PieChart from \"../src/components/PieChart\"\nimport BarChart from '../src/components/BarChart';\nimport DoughnutChart from '../src/components/DoughnutChart';\nimport { CircleSlider } from \"react-circle-slider\";\n\n\nChart.register(CategoryScale);\n\nfunction App() {\n  const [chartData, setChartData] = useState({\n    labels: Data.map((data) => data.year), \n    datasets: [\n      {\n        label: \"Users Gained \",\n        data: Data.map((data) => data.userGain),\n        backgroundColor: [\n          \"rgba(75,192,192,1)\",\n          \"#50AF95\",\n          \"#f3ba2f\",\n          \"#2a71d0\"\n        ],\n        borderColor: \"black\",\n        borderWidth: 2\n      }\n    ]\n  });\n  \n  const [value, changeValue] = useState(20);\n  const slider = useRef(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <p>Using Chart.js in React</p>\n        <PieChart chartData={chartData} />\n        <BarChart chartData={chartData}></BarChart>\n        <DoughnutChart chartData={chartData} />\n        <h2>Circluar Slider</h2>\n        <CircleSlider\n          ref={slider}\n          value={value}\n          stepSize={5}\n          onChange={value => changeValue(value)}\n          size={250}\n          max={120}\n          gradientColorFrom=\"#ec008c\"\n          gradientColorTo=\"#fc6767\"\n          knobRadius={20}\n          circleWidth={20}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/reportWebVitals.js",[],[],"/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/utils/Data.js",[],[],"/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/components/PieChart.js",[],[],"/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/components/BarChart.js",[],[],[],"/Users/trentosterman/Documents/School-Work/Tier-3/chart-spike/Chart.JS-spike/src/components/DoughnutChart.js",["42","43"],[],"import { Legend, plugins } from \"chart.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst DoughnutChart = ({ chartData }) => {\n    return (\n    <div>\n        <h2 style={{ textAlign: \"center\" }}> Doughnut Chart</h2>\n        <Doughnut\n        data={chartData}\n        options={{\n            plugins:{\n            legend: {\n                display: false,\n            },\n            subtitle: {\n                display: true,\n                text: \"Balance Score\"\n            }\n            }}\n        }>\n        </Doughnut>\n    </div>)\n}\n\nexport default DoughnutChart;",{"ruleId":"44","severity":1,"message":"45","line":16,"column":21,"nodeType":"46","messageId":"47","endLine":16,"endColumn":33},{"ruleId":"44","severity":1,"message":"48","line":1,"column":10,"nodeType":"46","messageId":"47","endLine":1,"endColumn":16},{"ruleId":"44","severity":1,"message":"49","line":1,"column":18,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},"no-unused-vars","'setChartData' is assigned a value but never used.","Identifier","unusedVar","'Legend' is defined but never used.","'plugins' is defined but never used."]